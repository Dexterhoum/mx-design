"use strict";(self.webpackChunk_mx_design_example=self.webpackChunk_mx_design_example||[]).push([[601],{7602:(n,e,t)=>{t.r(e),t.d(e,{default:()=>y});var l=t(2798),a=t(9641),o=t(7059),i=t(2983),s=t(6880),c=t(6623),p=t(1399),r=t(6562),u={code:"\nimport { SelectInput } from '@mx-design/web';\n\nconst OPTIONS = [\n  { label: 'China', value: 1 },\n  { label: 'United Kingdom', value: 2 },\n  { label: 'United States', value: 3 },\n  { label: 'France', value: 4 },\n  { label: 'Germany', value: 5 },\n  { label: 'Japan', value: 6 },\n];\n\nconst classStyles = `\n<style>\n.select-input-basic-container {\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  gap: 2px;\n}\n.select-input-basic-container > li {\n  display: block;\n  border-radius: 3px;\n  line-height: 28px;\n  font-size: 14px;\n  cursor: pointer;\n  padding: 3px 8px;\n  color: var(--td-text-color-primary);\n  transition: background-color 0.2s linear;\n  white-space: nowrap;\n  word-wrap: normal;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.select-input-basic-container> li:hover {\n  background-color: var(--bg-color-container-hover);\n}\n</style>\n`;\n\n\nconst divStyle = {\n  display: 'flex',\n  flexDirection: 'column'\n}\n\nfunction App() {\n  const [selectValue, setSelectValue] = React.useState(OPTIONS[0].label);\n  const [popupVisible, setPopupVisible] = React.useState(false);\n\n  const onOptionClick = (item) => {\n    setSelectValue(item);\n    setPopupVisible(false);\n  };\n\n  const onClear = () => {\n    setSelectValue('');\n  };\n\n  const onPopupVisibleChange = (val, context) => {\n    setPopupVisible(val);\n  };\n\n  React.useEffect(() => {\n    document.head.insertAdjacentHTML('beforeend', classStyles);\n  }, []);\n\n  return (\n    <div>\n      <SelectInput\n        value={selectValue}\n        popupVisible={popupVisible}\n        style={{ width: '300px' }}\n        inputProps={{\n          placeholder: 'Please Select',\n          allowClear: true,\n          onClear,\n        }}\n        onPopupVisibleChange={onPopupVisibleChange}\n        panel={\n          <div className=\"select-input-basic-container\">\n            {OPTIONS.map((item) => (\n              <li key={item.value} onClick={() => onOptionClick(item.label)}>\n                {item.label}\n              </li>\n            ))}\n          </div>\n        }\n      />\n    </div>\n  );\n}",namespace:r.Bb},b={code:"\nimport { GridLayout, SelectInput } from '@mx-design/web';\n\nconst OPTIONS = [\n  { label: 'China', value: 1 },\n  { label: 'United Kingdom', value: 2 },\n  { label: 'United States', value: 3 },\n  { label: 'France', value: 4 },\n  { label: 'Germany', value: 5 },\n  { label: 'Japan', value: 6 },\n];\n\nconst classStyles = `\n<style>\n.select-input-basic-container {\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  gap: 2px;\n}\n.select-input-basic-container > li {\n  display: block;\n  border-radius: 3px;\n  line-height: 28px;\n  font-size: 14px;\n  cursor: pointer;\n  padding: 3px 8px;\n  color: var(--td-text-color-primary);\n  transition: background-color 0.2s linear;\n  white-space: nowrap;\n  word-wrap: normal;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.select-input-basic-container> li:hover {\n  background-color: var(--bg-color-container-hover);\n}\n</style>\n`;\n\nconst divStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n};\n\nfunction App() {\n  const [selectValue, setSelectValue] = React.useState(OPTIONS[0]);\n  const [popupVisible, setPopupVisible] = React.useState(false);\n\n  const onOptionClick = (item) => {\n    setSelectValue(item);\n    setPopupVisible(false);\n  };\n\n  const onClear = () => {\n    setSelectValue('');\n  };\n\n  const onPopupVisibleChange = (val, context) => {\n    setPopupVisible(val);\n  };\n\n  React.useEffect(() => {\n    document.head.insertAdjacentHTML('beforeend', classStyles);\n  }, []);\n\n  return (\n    <GridLayout columns={2} gap={24}>\n      <Demo addBefore=\"country\" />\n      <Demo addAfter=\"country\" />\n      <Demo prefix={<IconSearch />} />\n      <Demo suffix={<IconSearch />} />\n    </GridLayout>\n  );\n}\nfunction Demo(props) {\n  const [selectValue, setSelectValue] = React.useState(OPTIONS[0].label);\n  const [popupVisible, setPopupVisible] = React.useState(false);\n\n  const onOptionClick = (item) => {\n    setSelectValue(item);\n    setPopupVisible(false);\n  };\n\n  const onClear = () => {\n    setSelectValue('');\n  };\n\n  const onPopupVisibleChange = (val, context) => {\n    setPopupVisible(val);\n  };\n\n  React.useEffect(() => {\n    document.head.insertAdjacentHTML('beforeend', classStyles);\n  }, []);\n\n  return (\n    <SelectInput\n      value={selectValue}\n      popupVisible={popupVisible}\n      inputProps={{\n        placeholder: 'Please Select',\n        allowClear: true,\n        onClear,\n        ...props,\n      }}\n      onPopupVisibleChange={onPopupVisibleChange}\n      panel={\n        <div className=\"select-input-basic-container\">\n          {OPTIONS.map((item) => (\n            <li key={item.value} onClick={() => onOptionClick(item.label)}>\n              {item.label}\n            </li>\n          ))}\n        </div>\n      }\n    />\n  );\n}",namespace:r.ew},d={code:"\nimport { GridLayout, SelectInput } from '@mx-design/web';\n\nconst OPTIONS = [\n  { label: 'China', value: 1 },\n  { label: 'United Kingdom', value: 2 },\n  { label: 'United States', value: 3 },\n  { label: 'France', value: 4 },\n  { label: 'Germany', value: 5 },\n  { label: 'Japan', value: 6 },\n];\n\nconst classStyles = `\n<style>\n.select-input-basic-container {\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  gap: 2px;\n}\n.select-input-basic-container > li {\n  display: block;\n  border-radius: 3px;\n  line-height: 28px;\n  font-size: 14px;\n  cursor: pointer;\n  padding: 3px 8px;\n  color: var(--td-text-color-primary);\n  transition: background-color 0.2s linear;\n  white-space: nowrap;\n  word-wrap: normal;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n.select-input-basic-container> li:hover {\n  background-color: var(--bg-color-container-hover);\n}\n</style>\n`;\n\nconst divStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n};\n\nfunction App() {\n  const [selectValue, setSelectValue] = React.useState(OPTIONS[0]);\n  const [popupVisible, setPopupVisible] = React.useState(false);\n\n  const onOptionClick = (item) => {\n    setSelectValue(item);\n    setPopupVisible(false);\n  };\n\n  const onClear = () => {\n    setSelectValue('');\n  };\n\n  const onPopupVisibleChange = (val, context) => {\n    setPopupVisible(val);\n  };\n\n  React.useEffect(() => {\n    document.head.insertAdjacentHTML('beforeend', classStyles);\n  }, []);\n\n  return (\n    <GridLayout columns={2} gap={24}>\n      <Space lastOneStyle={{ flex: 1 }}><span>disabled: </span><Demo disabled={true} /></Space>\n      <Space lastOneStyle={{ flex: 1 }}><span>readOnly: </span><Demo readOnly={true} /></Space>\n      <Space lastOneStyle={{ flex: 1 }}><span>error: </span><Demo status=\"error\" /></Space>\n      <Space lastOneStyle={{ flex: 1 }}><span>warning: </span><Demo status=\"warning\" /></Space> \n    </GridLayout>\n  );\n}\nfunction Demo(props) {\n  const [selectValue, setSelectValue] = React.useState(OPTIONS[0].label);\n  const [popupVisible, setPopupVisible] = React.useState(false);\n\n  const onOptionClick = (item) => {\n    setSelectValue(item);\n    setPopupVisible(false);\n  };\n\n  const onClear = () => {\n    setSelectValue('');\n  };\n\n  const onPopupVisibleChange = (val, context) => {\n    setPopupVisible(val);\n  };\n\n  React.useEffect(() => {\n    document.head.insertAdjacentHTML('beforeend', classStyles);\n  }, []);\n\n  return (\n    <SelectInput\n      value={selectValue}\n      popupVisible={popupVisible}\n      inputProps={{\n        placeholder: 'Please Select',\n        allowClear: true,\n        onClear,\n        ...props,\n      }}\n      onPopupVisibleChange={onPopupVisibleChange}\n      panel={\n        <div className=\"select-input-basic-container\">\n          {OPTIONS.map((item) => (\n            <li key={item.value} onClick={() => onOptionClick(item.label)}>\n              {item.label}\n            </li>\n          ))}\n        </div>\n      }\n    />\n  );\n}",namespace:r.qb},m=(0,a.Z)((0,a.Z)((0,a.Z)({},u.namespace,u),b.namespace,b),d.namespace,d),f=t(2476);function S(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,l)}return t}function v(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?S(Object(t),!0).forEach((function(e){(0,a.Z)(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):S(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}const y=function(){var n=(0,p.b)({namespace:c.I}),e=(0,o.Z)(n,1)[0],t=(0,i.useMemo)((function(){return Object.keys(e).map((function(n){return v(v({},e[n]),m[n])}))}),[e,m]),a=(0,i.useMemo)((function(){return t.map((function(n){return{title:n.title,href:"#".concat(n.namespace)}}))}),[t]);return i.createElement(s.Z,{titleList:a},t.map((function(n){return i.createElement(f.AN,(0,l.Z)({key:n.namespace},n))})))}}}]);