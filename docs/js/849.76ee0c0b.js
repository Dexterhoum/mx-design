"use strict";(self.webpackChunk_mx_design_example=self.webpackChunk_mx_design_example||[]).push([[849],{3976:(n,t,i)=>{i.r(t),i.d(t,{default:()=>k});var o=i(8631),e=i(4154),c=i(4317),a=i(1855),s=i(4141),r=i(1753),f=i(5849),p=i(7557),u=i(4951),l={code:"\nimport { NotificationStore, Button } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <Button\n      onClick={() => {\n        NotificationStore.add({\n          type: 'info',\n          title: 'Title',\n          content: 'This is an notification!'\n        });\n      }}\n    >\n      Open Notification\n    </Button>\n  );\n};",namespace:u.x},d={code:"\nimport { NotificationStore, Space, Button } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <Space>\n      <Button\n        onClick={() => {\n          NotificationStore.add({\n            title: 'Title',\n            type: 'info',\n            content: 'This is an info notification!',\n          });\n        }}\n      >\n        Info Notification\n      </Button>\n      <Button\n        onClick={() => {\n          NotificationStore.add({\n            title: 'Title',\n            type: 'warning',\n            content: 'This is an warning notification!',\n          });\n        }}\n        status=\"warning\"\n      >\n        Warning Notification\n      </Button>\n      <Button\n        onClick={() => {\n          NotificationStore.add({\n            title: 'Title',\n            type: 'success',\n            content: 'This is an success notification!',\n          });\n        }}\n        status=\"success\"\n      >\n        Success Notification\n      </Button>\n      <Button\n        onClick={() => {\n          NotificationStore.add({\n            title: 'Title',\n            type: 'error',\n            content: 'This is an error notification!',\n          });\n        }}\n        status=\"error\"\n      >\n        Error Notification\n      </Button>\n      <Button\n        onClick={() => {\n          NotificationStore.add({\n            title: 'Title',\n            type: 'loading',\n            content: 'This is an loading notification!',\n          });\n        }}\n        status=\"default\"\n      >\n        Loading Notification\n      </Button>\n    </Space>\n  );\n};",namespace:u.kc},m={code:"\nimport { Button } from '@mx-design/web';\n\nfunction App() {\n  function updateMessage() {\n    const id = NotificationStore.add({\n      title: 'Title',\n      type: 'loading',\n      content: 'Will update after 1 seconds...',\n    });\n    setTimeout(() => {\n      NotificationStore.update(id, {\n        title: 'Title',\n        type: 'success',\n        content: 'Update success!',\n      });\n    },1000);\n  }\n\n  return (\n    <Button onClick={updateMessage}>\n      Update notification\n    </Button>\n  );\n};",namespace:u.UT},B={code:"\nimport { NotificationStore, Space, Button } from '@mx-design/web';\n\nfunction App() {\n  function updateNotification() {\n    const id = NotificationStore.add({\n      title: 'Notification',\n      type: 'info',\n      content: 'This is a notification!',\n      duration: null,\n      btn: (\n        <span>\n          <Button\n            status='default'\n            onClick={() => NotificationStore.remove(id)}\n            style={{ margin: '0 12px' }}\n          >\n            Cancel\n          </Button>\n          <Button onClick={() => NotificationStore.remove(id)}>\n            Ok\n          </Button>\n        </span>\n      ),\n    });\n  }\n\n  return (\n    <Button onClick={updateNotification}>\n      Open Notification\n    </Button>\n  );\n};",namespace:u.an},N={code:'\nimport { NotificationStore, Space, Button } from \'@mx-design/web\';\n\nfunction App() {\n\n  const IconFace = createIcon({\n    viewBox: \'0 0 36 36\',\n    paths: (\n      <>\n        <path\n          fill="#FFCB4C"\n          d="M35.597 14.232c2.083 9.72-4.108 19.289-13.828 21.372C12.049 37.687 2.48 31.496.397 21.776C-1.686 12.056 4.506 2.487 14.225.404c9.72-2.084 19.289 4.108 21.372 13.828"\n        />\n        <path fill="#F4F7F9" d="M29.284 9.012a6.734 6.734 0 1 1-13.169 2.821a6.734 6.734 0 0 1 13.169-2.821z" />\n        <circle fill="#292F33" cx="22.306" cy="9.291" r="2.037" />\n        <path fill="#F4F7F9" d="M14.088 14.282a3.938 3.938 0 1 1-7.7 1.65a3.938 3.938 0 0 1 7.7-1.65z" />\n        <circle transform="rotate(-12.095 10.236 15.853)" fill="#292F33" cx="10.238" cy="15.857" r="1.942" />\n        <path\n          fill="#65471B"\n          d="M18.625 20.937c-3.543.759-5.981.85-9.01.908c-.691.015-1.955.419-1.536 2.375c.838 3.911 6.379 7.837 12.642 6.495c6.262-1.342 9.708-7.194 8.87-11.105c-.419-1.956-1.739-1.808-2.375-1.536c-2.786 1.187-5.048 2.104-8.591 2.863z"\n        />\n        <path fill="#E8596E" d="M11 24.004v6c0 3 2 6 6 6s6-3 6-6v-6H11z" />\n        <path fill="#DD2F45" d="M17 31.883a.545.545 0 0 0 .545-.545v-6.295h-1.091v6.295a.546.546 0 0 0 .546.545z" />\n        <path\n          fill="#FFF"\n          d="M10.034 23.801s3.143.349 9.01-.908c5.867-1.257 8.591-2.864 8.591-2.864s-1.117 4.33-7.962 5.797c-6.845 1.467-9.639-2.025-9.639-2.025z"\n        />\n      </>\n    ),\n  });\n\n  return (\n    <Button\n      onClick={() =>\n        NotificationStore.add({\n          icon: <IconFace />,\n          title: \'Upgrade\',\n          content: \'Ready to upgrade ArcoDesign 2.0\',\n        })\n      }\n    >\n      Info\n    </Button>\n  );\n};',namespace:u.pR},g={code:"\nimport { NotificationStore, Button } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <Button\n      onClick={() => {\n        NotificationStore.add({\n          type: 'info',\n          closable: true,\n          style: { width: 500 },\n          title: 'Notification',\n          content: 'This is an info notification!'\n        });\n      }}\n    >\n      Open Notification\n    </Button>\n  );\n};",namespace:u.z4},S={code:"\nimport { Button } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <Space direction=\"vertical\">\n      <Space>\n        <Button\n          status=\"warning\"\n          onClick={() => {\n            NotificationStore.add({\n              type: 'warning',\n              title: 'Notification',\n              position: 'top-left',\n              content: 'This is an info Notification!',\n            });\n          }}\n        >\n          Top Left\n        </Button>\n        <Button\n          status=\"success\"\n          onClick={() => {\n            NotificationStore.add({\n              type: 'success',\n              title: 'Notification',\n              position: 'top',\n              content: 'This is an info Notification!',\n            });\n          }}\n        >\n          Top\n        </Button>\n        <Button\n          status=\"default\"\n          onClick={() => {\n            NotificationStore.add({\n              type: 'loading',\n              title: 'Notification',\n              position: 'top-right',\n              content: 'This is an info Notification!',\n            });\n          }}\n        >\n          Top Right\n        </Button>\n      </Space>\n      <Space>\n        <Button\n          status=\"warning\"\n          onClick={() => {\n            NotificationStore.add({\n              type: 'warning',\n              title: 'Notification',\n              position: 'bottom-left',\n              content: 'This is an info Notification!',\n            });\n          }}\n        >\n          Bottom Left\n        </Button>\n        <Button\n          status=\"success\"\n          onClick={() => {\n            NotificationStore.add({\n              type: 'success',\n              title: 'Notification',\n              position: 'bottom',\n              content: 'This is an info Notification!',\n            });\n          }}\n        >\n          Bottom\n        </Button>\n        <Button\n          status=\"default\"\n          onClick={() => {\n            NotificationStore.add({\n              type: 'loading',\n              title: 'Notification',\n              position: 'bottom-right',\n              content: 'This is an info Notification!',\n            });\n          }}\n        >\n          Bottom Right\n        </Button>\n      </Space>\n    </Space>\n  );\n}",namespace:u.yX},h=(0,e.A)((0,e.A)((0,e.A)((0,e.A)((0,e.A)((0,e.A)((0,e.A)({},l.namespace,l),d.namespace,d),m.namespace,m),B.namespace,B),N.namespace,N),g.namespace,g),S.namespace,S);function y(n,t){var i=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),i.push.apply(i,o)}return i}function b(n){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?y(Object(i),!0).forEach((function(t){(0,e.A)(n,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(i)):y(Object(i)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(i,t))}))}return n}const k=function(){var n=(0,f.Y)({namespace:r.s2}),t=(0,c.A)(n,1)[0],i=(0,a.useMemo)((function(){return Object.keys(t).map((function(n){return b(b({},t[n]),h[n])}))}),[t,h]),e=(0,a.useMemo)((function(){return i.map((function(n){return{title:n.title,href:"#".concat(n.namespace)}}))}),[i]);return a.createElement(s.A,{titleList:e},i.map((function(n){return a.createElement(p.Qk,(0,o.A)({key:n.namespace},n))})))}}}]);