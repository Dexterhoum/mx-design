{"version":3,"file":"js/85.cb66d57a.js","mappings":"sOA2CaA,EAAQ,CACnBC,KA1CW,siCA2CXC,UAAWC,EAAAA,ICzBAC,EAAe,CAC1BH,KAnBW,+kBAoBXC,UAAWG,EAAAA,ICGAC,EAAe,CAC1BL,KAxBW,6XAyBXC,UAAWK,EAAAA,ICiBAC,EAAiB,CAC5BP,KA3CW,o7BA4CXC,UAAWO,EAAAA,ICrCAC,EAAa,CACxBT,KARW,2KASXC,UAAWS,EAAAA,ICUAC,EAAY,CACvBX,KApBW,giBAqBXC,UAAWW,EAAAA,ICRAC,EAAiB,CAC5Bb,KAdW,2QAeXC,UAAWa,EAAAA,ICTAC,GAAWC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACrBjB,EAAME,UAAYF,GAClBI,EAAaF,UAAYE,GACzBE,EAAaJ,UAAYI,GACzBE,EAAeN,UAAYM,GAC3BE,EAAWR,UAAYQ,GACvBE,EAAUV,UAAYU,GACtBE,EAAeZ,UAAYY,G,+kBCoB9B,QA5BA,WACE,IAAAI,GAAgBC,EAAAA,EAAAA,GAA4B,CAAEjB,UAAWkB,EAAAA,KAAlDC,GAA8DC,EAAAA,EAAAA,GAAAJ,EAAA,GAAzD,GACNK,GAAWC,EAAAA,EAAAA,UACf,kBACEC,OAAOC,KAAKL,GAAOM,KAAI,SAACC,GAAG,OAAAC,EAAAA,EAAA,GACtBR,EAAMO,IACNZ,EAAYY,GAAI,GAClB,GACL,CAACP,EAAOL,IAGJc,GAAYN,EAAAA,EAAAA,UAChB,kBACED,EAASI,KAAI,SAACI,GAAI,MAAM,CACtBC,MAAOD,EAAKC,MACZC,KAAM,IAAFC,OAAMH,EAAK7B,WAChB,GAAE,GACL,CAACqB,IAGH,OACEY,EAAAA,cAACC,EAAAA,EAAoB,CAACN,UAAWA,GAC9BP,EAASI,KAAI,SAACU,GAAI,OACjBF,EAAAA,cAACG,EAAAA,IAAkBC,EAAAA,EAAAA,GAAA,CAACX,IAAKS,EAAKnC,WAAemC,GAAQ,IAI7D,C","sources":["webpack://@mx-design/example/./src/pages/inputTag/examples/basic.tsx","webpack://@mx-design/example/./src/pages/inputTag/examples/prefix-suffix.tsx","webpack://@mx-design/example/./src/pages/inputTag/examples/label-in-value.tsx","webpack://@mx-design/example/./src/pages/inputTag/examples/validate-format.tsx","webpack://@mx-design/example/./src/pages/inputTag/examples/save-on-blur.tsx","webpack://@mx-design/example/./src/pages/inputTag/examples/render-tag.tsx","webpack://@mx-design/example/./src/pages/inputTag/examples/token-separator.tsx","webpack://@mx-design/example/./src/pages/inputTag/examples/index.ts","webpack://@mx-design/example/./src/pages/inputTag/index.tsx"],"sourcesContent":["import { Basic } from '../locale';\n\nconst code = `\nimport { Space, InputTag } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <div>\n      <Space style={{ marginBottom: 20 }}>\n        <InputTag allowClear placeholder=\"Input and press Enter\" style={{ width: 350 }} />\n        <InputTag\n          allowClear\n          placeholder=\"Disabled\"\n          disabled\n          style={{ width: 350 }}\n          defaultValue={[\n            {\n              label: '标签3',\n              value: '1',\n            },\n          ]}\n        />\n      </Space>\n      <Space style={{ marginBottom: 20 }}>\n        <InputTag\n          allowClear\n          placeholder=\"Readonly\"\n          readOnly\n          style={{ width: 350 }}\n          defaultValue={[\n            {\n              label: '标签3',\n              value: '1',\n            },\n          ]}\n        />\n        <InputTag allowClear placeholder=\"Error\" status=\"error\" style={{ width: 350 }} />\n      </Space>\n      <InputTag allowClear placeholder=\"Warning\" status=\"warning\" style={{ width: 350 }} />\n    </div>\n  );\n}`;\n\nexport const basic = {\n  code,\n  namespace: Basic,\n};\n","import { PrefixSuffix } from '../locale';\n\nconst code = `\nimport { Space, InputTag, IconFabulous } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <div>\n      <Space style={{ marginBottom: 20 }}>\n        <InputTag prefix=\"¥\" style={{ width: 350 }} allowClear />\n        <InputTag addBefore={<IconFabulous />} style={{ width: 350 }} allowClear />\n      </Space>\n      <Space style={{ marginBottom: 20 }}>\n        <InputTag prefix=\"¥\" addBefore={<IconFabulous />} style={{ width: 350 }} allowClear />\n        <InputTag addBefore=\"www.\" addAfter=\".com\" style={{ width: 350 }} allowClear />\n      </Space>\n    </div>\n  );\n}`;\n\nexport const prefixSuffix = {\n  code,\n  namespace: PrefixSuffix,\n};\n","import { LabelInValue } from '../locale';\n\nconst code = `\nimport { InputTag } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <InputTag\n      allowClear\n      labelInValue\n      defaultValue={[\n        {\n          label: 'a',\n          value: '1',\n        },\n      ]}\n      placeholder=\"Please input\"\n      style={{ maxWidth: 350 }}\n      onChange={(v) => {\n        console.log(v);\n      }}\n    />\n  );\n}`;\n\nexport const labelInValue = {\n  code,\n  namespace: LabelInValue,\n};\n","import { ValidateFormat } from '../locale';\n\nconst code = `\nimport { Space, InputTag, useMessage } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  return (\n    <Space>\n      <InputTag\n        allowClear\n        style={{ width: 350 }}\n        placeholder=\"Please input\"\n        validate={(v) => {\n          if (!v || v.length < 3) {\n            Message.add({\n              type: 'error',\n              content: 'length of value should be greater than 3',\n            });\n\n            return false;\n          }\n\n          return true;\n        }}\n      />\n      <InputTag\n        allowClear\n        style={{ width: 350 }}\n        placeholder=\"Format user input\"\n        validate={(v) => {\n          return { word: v };\n        }}\n        onChange={(value) => {\n          Message.add({\n            type: 'info',\n            content: \\`Paramster of onChange: \\${JSON.stringify(value)}\\`,\n          });\n        }}\n      />\n    </Space>\n  );\n}`;\n\nexport const validateFormat = {\n  code,\n  namespace: ValidateFormat,\n};\n","import { SaveOnBlur } from '../locale';\n\nconst code = `\nimport { InputTag } from '@mx-design/web';\n\nfunction App() {\n  return <InputTag saveOnBlur placeholder=\"Input and blur directly\" style={{ maxWidth: 350 }} />;\n}`;\n\nexport const saveOnBlur = {\n  code,\n  namespace: SaveOnBlur,\n};\n","import { RenderTag } from '../locale';\n\nconst code = `\nimport { GridLayout, InputTag } from '@mx-design/web';\n\nconst options = ['error', 'brand', 'success'];\n\nfunction tagRender(props) {\n  const { label, value, closable, onClose } = props;\n  return (\n    <Tag status={options.indexOf(value) > -1 ? value : 'default'} closable={closable} onClose={onClose} style={{ margin: '2px 6px 2px 0' }}>\n      {label}\n    </Tag>\n  );\n}\n\nfunction App() {\n  return <InputTag allowClear placeholder=\"Please input\" defaultValue={options} renderTag={tagRender} style={{ maxWidth: 350 }} />;\n}\n`;\n\nexport const renderTag = {\n  code,\n  namespace: RenderTag,\n};\n","import { TokenSeparator } from '../locale';\n\nconst code = `\nimport { GridLayout, InputTag } from '@mx-design/web';\n\nfunction App() {\n  return (\n    <div>\n      <p>China,USA|UK</p>\n      <InputTag allowClear tokenSeparators={[',', '|']} placeholder=\"Paste text here\" style={{ width: 350 }} />\n    </div>\n  );\n}\n`;\n\nexport const tokenSeparator = {\n  code,\n  namespace: TokenSeparator,\n};\n","import { basic } from './basic';\nimport { prefixSuffix } from './prefix-suffix';\nimport { labelInValue } from './label-in-value';\nimport { validateFormat } from './validate-format';\nimport { saveOnBlur } from './save-on-blur';\nimport { renderTag } from './render-tag';\nimport { tokenSeparator } from './token-separator';\n\nexport const exampleList = {\n  [basic.namespace]: basic,\n  [prefixSuffix.namespace]: prefixSuffix,\n  [labelInValue.namespace]: labelInValue,\n  [validateFormat.namespace]: validateFormat,\n  [saveOnBlur.namespace]: saveOnBlur,\n  [renderTag.namespace]: renderTag,\n  [tokenSeparator.namespace]: tokenSeparator,\n};\n","import React, { useMemo } from 'react';\nimport ComponentInnerLayout from '@/components/Layout/ComponentInnerLayout';\nimport { INPUT_TAG } from '@/constants';\nimport { useLocale } from '@/locale/useLocal/useLocal';\nimport { exampleList } from './examples';\nimport { ComponentCodeBlock } from '@/components/DemoBlock';\n\nfunction SelectInputExample() {\n  const [local] = useLocale<typeof INPUT_TAG>({ namespace: INPUT_TAG });\n  const dataList = useMemo(\n    () =>\n      Object.keys(local).map((key) => ({\n        ...local[key],\n        ...exampleList[key],\n      })),\n    [local, exampleList]\n  );\n\n  const titleList = useMemo(\n    () =>\n      dataList.map((item) => ({\n        title: item.title,\n        href: `#${item.namespace}`,\n      })),\n    [dataList]\n  );\n\n  return (\n    <ComponentInnerLayout titleList={titleList}>\n      {dataList.map((data) => (\n        <ComponentCodeBlock key={data.namespace} {...data} />\n      ))}\n    </ComponentInnerLayout>\n  );\n}\nexport default SelectInputExample;\n"],"names":["basic","code","namespace","Basic","prefixSuffix","PrefixSuffix","labelInValue","LabelInValue","validateFormat","ValidateFormat","saveOnBlur","SaveOnBlur","renderTag","RenderTag","tokenSeparator","TokenSeparator","exampleList","_defineProperty","_useLocale","useLocale","INPUT_TAG","local","_slicedToArray","dataList","useMemo","Object","keys","map","key","_objectSpread","titleList","item","title","href","concat","React","ComponentInnerLayout","data","ComponentCodeBlock","_extends"],"sourceRoot":""}