"use strict";(self.webpackChunk_mx_design_example=self.webpackChunk_mx_design_example||[]).push([[475],{3619:(n,t,e)=>{e.r(t),e.d(t,{default:()=>b});var o=e(2798),r=e(9641),i=e(7059),s=e(2983),d=e(6880),l=e(1399),p=e(8401),a={code:"\nimport { Dropdown, Message, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  const droplist = [\n    {\n      uid: 1,\n      title: 'ChengDu',\n      children: [\n        {\n          uid: 5,\n          title: 'XiAn'\n        },\n        {\n          uid: 6,\n          title: 'DongBei'\n        }\n      ]\n    },\n    {\n      uid: 2,\n      title: 'XiAn'\n    },\n    {\n      uid: 3,\n      title: 'DongBei'\n    },\n    {\n      uid: 4,\n      title: 'GuangXi'\n    }\n  ]\n  const clickHandler = (key) => {\n    Message.add({\n      type: 'success',\n      content: `选中【${key}】`\n    });\n  };\n\n  const More = React.forwardRef((props, ref) => {\n    const { visible, ...rest } = props;\n\n    return (\n      <div {...rest} ref={ref} style={{ display: 'flex', alignItems: 'center' }}>\n        更多{' '}\n        <IconArrowBottom style={{ transform: visible ? 'rotate(180deg)' : 'none', transition: 'transform 0.1s linear', marginLeft: '2px' }} />\n      </div>\n    );\n  });\n       \n  return (\n    <Space>\n      <Dropdown droplist={droplist} onClick={clickHandler}>\n        <Button>Hover me</Button>\n      </Dropdown>\n      <Button.Group>\n        <Button type=\"brand\">Publish</Button>\n        <Dropdown droplist={droplist} onClick={clickHandler}>\n          <Button type=\"brand\" icon={<IconArrowBottom />} />\n        </Dropdown>\n      </Button.Group>\n      <Dropdown droplist={droplist} onClick={clickHandler}>\n        <Button type=\"text\"><IconEllipsis /></Button>\n      </Dropdown>\n      <Dropdown droplist={droplist} onClick={clickHandler} addVisibleStatus>\n        <More />\n      </Dropdown>\n      <Dropdown droplist={droplist} onClick={clickHandler} disabled>\n        <Button type=\"text\" disabled>Disabled DropDown</Button>\n      </Dropdown>\n    </Space>\n  )\n}",namespace:p.Bb},c={code:"\nimport { Dropdown, Message, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  const droplist = [\n    {\n      uid: 1,\n      title: 'ChengDu',\n    },\n    {\n      uid: 2,\n      title: 'XiAn',\n    },\n    {\n      uid: 3,\n      title: 'DongBei',\n    },\n    {\n      uid: 4,\n      title: 'GuangXi',\n    }\n  ]\n\n  return (\n    <Space size='28px'>\n      <Dropdown trigger=\"click\" droplist={droplist}>\n        <Button>Click me</Button>\n      </Dropdown>\n      <Dropdown trigger=\"focus\" droplist={droplist} >\n        <Input style={{ width: 350 }} placeholder=\"Please Enter something\" />\n      </Dropdown>\n      <Dropdown trigger=\"context-menu\" droplist={droplist}>\n        <Button>Right Click</Button>\n      </Dropdown>\n    </Space>\n  )\n}",namespace:p.N0},u={code:'\nimport { Dropdown, Message, Button } from \'@mx-design/web\';\n\nfunction App() {\n  const Message = useMessage();\n  const droplist = [\n    {\n      uid: 1,\n      title: \'ChengDu\',\n    },\n    {\n      uid: 2,\n      title: \'XiAn\'\n    },\n    {\n      uid: 3,\n      title: \'DongBei\'\n    },\n    {\n      uid: 4,\n      title: \'GuangXi\'\n    }\n  ]\n  const clickHandler = (key) => {\n    Message.add({\n      type: \'success\',\n      content: `选中【${key}】`\n    });\n  };\n\n  return (\n    <Space direction="vertical" size="24px">\n      <Space size="24px">\n        <Dropdown placement="left" droplist={droplist} onClick={clickHandler}>\n          <Button type="brand" status="default">Left</Button>\n        </Dropdown>\n        <Dropdown placement="left-start" droplist={droplist} onClick={clickHandler}>\n          <Button type="brand" status="default">Left-start</Button>\n        </Dropdown>\n        <Dropdown placement="left-end" droplist={droplist} onClick={clickHandler}>\n          <Button type="brand" status="default">Left-end</Button>\n        </Dropdown>\n        <Dropdown placement="right" droplist={droplist} onClick={clickHandler}>\n          <Button type="brand" status="default">Right</Button>\n        </Dropdown>\n        <Dropdown placement="right-start" droplist={droplist} onClick={clickHandler}>\n          <Button type="brand" status="default">Right-start</Button>\n        </Dropdown>\n        <Dropdown placement="right-end" droplist={droplist} onClick={clickHandler}>\n          <Button type="brand" status="default">Right-end</Button>\n        </Dropdown>\n      </Space>\n      <Space size="24px">\n        <Dropdown placement="top" droplist={droplist} onClick={clickHandler}>\n          <Button type="brand" status="default">Top</Button>\n        </Dropdown>\n        <Dropdown placement="top-start" droplist={droplist} onClick={clickHandler}>\n          <Button type="brand" status="default">Top-start</Button>\n        </Dropdown>\n        <Dropdown placement="top-end" droplist={droplist} onClick={clickHandler}>\n          <Button type="brand" status="default">Top-end</Button>\n        </Dropdown>\n        <Dropdown placement="bottom" droplist={droplist} onClick={clickHandler}>\n          <Button type="brand" status="default">Bottom</Button>\n        </Dropdown>\n        <Dropdown placement="bottom-start" droplist={droplist} onClick={clickHandler}>\n          <Button type="brand" status="default">Bottom-start</Button>\n        </Dropdown>\n        <Dropdown placement="bottom-end" droplist={droplist} onClick={clickHandler}>\n          <Button type="brand" status="default">Bottom-end</Button>\n        </Dropdown>\n      </Space>\n    </Space>\n  )\n}',namespace:p.Ly},m={code:"\nimport { Dropdown, Message, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  const droplist = [\n    {\n      uid: 1,\n      title: 'ChengDu',\n      divider: true,\n      children: [\n        {\n          uid: 5,\n          title: 'XiAn'\n        },\n        {\n          uid: 6,\n          title: 'DongBei'\n        }\n      ]\n    },\n    {\n      uid: 2,\n      title: 'XiAn',\n    },\n    {\n      uid: 3,\n      title: 'DongBei',\n      divider: true,\n    },\n    {\n      uid: 4,\n      title: 'GuangXi',\n      disabled: true\n    }\n  ]\n  const clickHandler = (key) => {\n    Message.add({\n      type: 'success',\n      content: `选中【${key}】`\n    });\n  };\n\n  return (\n    <Space>\n      <Dropdown droplist={droplist} onClick={clickHandler}>\n        <Button>Hover me</Button>\n      </Dropdown>\n    </Space>\n  )\n}",namespace:p.x9},w={code:"\nimport { Dropdown, Message, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  const droplist = [\n    {\n      uid: 1,\n      title: 'ChengDu',\n      children: [\n        {\n          uid: 5,\n          title: 'XiAn'\n        },\n        {\n          uid: 6,\n          title: 'DongBei'\n        }\n      ]\n    },\n    {\n      uid: 2,\n      title: 'XiAn'\n    },\n    {\n      uid: 3,\n      title: 'DongBei'\n    },\n    {\n      uid: 4,\n      title: 'GuangXi'\n    }\n  ]\n  const clickHandler = (key) => {\n    Message.add({\n      type: 'success',\n      content: `选中【${key}】`\n    });\n  };\n\n  const Demo = React.forwardRef((props, ref) => {\n    const { visible, disabled, ...rest } = props;\n\n    return (\n      <div {...rest} ref={ref} style={{ display: 'flex', alignItems: 'center', color: disabled ? 'var(--text-color-disabled)' : 'none' }}>\n        更多{' '}\n        <IconArrowBottom style={{ transform: visible ? 'rotate(180deg)' : 'none', transition: 'transform 0.1s linear', marginLeft: '2px' }} />\n      </div>\n    );\n  });\n       \n  return (\n    <Space>\n      <Dropdown droplist={droplist} onClick={clickHandler} addVisibleStatus>\n        <Demo />\n      </Dropdown>\n      <Dropdown droplist={droplist} onClick={clickHandler} addVisibleStatus disabled>\n        <Demo />\n      </Dropdown>\n    </Space>\n  )\n}",namespace:p.nN},f={code:"\nimport { Dropdown, Message, Button } from '@mx-design/web';\n\nfunction App() {\n  const Message = useMessage();\n  const droplist = [\n    {\n      uid: 1,\n      title: 'My Account',\n      divider: true,\n      style: { fontWeight: 600 },\n    },\n    {\n      uid: 2,\n      title: <>Profile <span style={{ fontSize: '12px', opacity: 0.6 }}>⇧⌘P</span></>,\n      style: { width: '100%', display: 'flex', justifyContent: 'space-between' },\n    },\n    {\n      uid: 3,\n      title: <>Setting <span style={{ fontSize: '12px', opacity: 0.6 }}>⌘S</span></>,\n      style: { width: '100%', display: 'flex', justifyContent: 'space-between' },\n      divider: true,\n    },\n    {\n      uid: 4,\n      title:  <>Delete <IconAshbin style={{ opacity: 0.6 }} /></>,\n      style: { width: '100%',color: 'var(--error-color)', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }\n    }\n  ]\n\n  return (\n    <Space>\n      <Dropdown droplist={droplist} style={{ width: '220px' }} trigger=\"click\">\n        <Button>Hover me</Button>\n      </Dropdown>\n    </Space>\n  )\n}",namespace:p.R0},g=(0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)((0,r.Z)({},a.namespace,a),u.namespace,u),m.namespace,m),c.namespace,c),w.namespace,w),f.namespace,f),D=e(6623),y=e(2476);function k(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,o)}return e}function B(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?k(Object(e),!0).forEach((function(t){(0,r.Z)(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):k(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}const b=function(){var n=(0,l.b)({namespace:D.Ld}),t=(0,i.Z)(n,1)[0],e=(0,s.useMemo)((function(){return Object.keys(t).map((function(n){return B(B({key:n},t[n]),g[n])}))}),[t]),r=(0,s.useMemo)((function(){return e.map((function(n){return{title:n.title,href:"#".concat(n.key)}}))}),[e]);return s.createElement(d.Z,{titleList:r},e.map((function(n,t){return s.createElement(y.AN,(0,o.Z)({key:t},n))})))}}}]);